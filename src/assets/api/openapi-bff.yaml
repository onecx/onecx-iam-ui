---
openapi: 3.0.3
info:
  title: OneCx IAM Bff
  version: 1.0.0
servers:
  - url: "http://onecx-iam-bff:8080"
tags:
  - name: UserInternal
    description: Iam user internal service
  - name: adminInternal
    description: Iam admin internal service
paths:
  /admin/users/search:
    post:
      x-onecx:
        permissions:
          user:
            - admin-read
      tags:
        - AdminInternal
      summary: Search users by criteria
      operationId: searchUsersByCriteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSearchCriteria'
      responses:
        200:
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/UserPageResult"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /admin/{userId}/roles:
    post:
      x-onecx:
        permissions:
          role:
            - admin-read
      tags:
        - AdminInternal
      summary: Get roles of user by id
      operationId: getUserRoles
      parameters:
        - name: userId
          in: path
          required: true
          description: Keycloak userId
          schema:
            type: string
      requestBody:
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/SearchUserRolesRequest'
      responses:
        200:
          description: OK
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/UserRolesResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /admin/roles/search:
    post:
      x-onecx:
        permissions:
          role:
            - admin-read
      tags:
        - AdminInternal
      summary: Search roles by criteria
      operationId: searchRolesByCriteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleSearchCriteria'
      responses:
        200:
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/RolePageResult"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /admin/providers:
    get:
      x-onecx:
        permissions:
          provider:
            - admin-read
      tags:
        - AdminInternal
      summary: Get all providers
      operationId: getAllProviders
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvidersResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /me/password:
    put:
      x-onecx:
        permissions:
          password:
            - write
      tags:
        - UserInternal
      summary: Reset user password
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResetPasswordRequest'
      responses:
        204:
          description: Reset password succeeded
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /me/provider:
    get:
      x-onecx:
        permissions:
          provider:
            - read
      tags:
        - UserInternal
      summary: Get user provider
      operationId: getUserProvider
      responses:
        200:
          description: OK
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/ProvidersResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
components:
  schemas:
    SearchUserRolesRequest:
      type: object
      required:
        - issuer
      properties:
        issuer:
          type: string
    ProvidersResponse:
      type: object
      properties:
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
    Provider:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        description:
          type: string
        fromToken:
          type: boolean
        domains:
          type: array
          items:
            $ref: '#/components/schemas/Domain'
    Domain:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        issuer:
          type: string
    UserRolesResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    UserSearchCriteria:
      type: object
      required:
        - issuer
      properties:
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        userId:
          type: string
        email:
          type: string
        issuer:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    UserPageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: string
        origin:
          type: string
        provider:
          type: string
        domain:
          type: string
        createdTimestamp:
          $ref: '#/components/schemas/OffsetDateTime'
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    UserResetPasswordRequest:
      type: object
      required:
        - password
      properties:
        password:
          type: string
          format: password
          minLength: 1
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    RoleSearchCriteria:
      type: object
      required:
        - issuer
      properties:
        name:
          type: string
        issuer:
          type: string
        pageNumber:
          format: int32
          description: The number of page.
          default: 0
          type: integer
        pageSize:
          format: int32
          description: The size of page
          default: 100
          maximum: 1000
          type: integer
    RolePageResult:
      type: object
      properties:
        totalElements:
          format: int64
          description: The total elements in the resource.
          type: integer
        number:
          format: int32
          type: integer
        size:
          format: int32
          type: integer
        totalPages:
          format: int64
          type: integer
        stream:
          type: array
          items:
            $ref: '#/components/schemas/Role'
    Role:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string
    OffsetDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00